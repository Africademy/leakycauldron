version: 2
jobs:
  build:
    docker:
      - image: circleci/openjdk:11-jdk

    working_directory: ~/repo
    environment:
      MAVEN_OPTS: -Xmx512m

    steps:
      # get code
      - checkout
      # handle dependency caching and run build
      - restore_cache:
          keys:
            - v1-dependencies-{{ .Branch }}-{{ .Revision }}
            - v1-dependencies-{{ .Branch }}
            - v1-dependencies-
      - run: mvn install
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ .Branch }}-{{ .Revision }}
      # collect test results and upload coverage
      - run: mkdir -p ~/test_results
      - run: find . -type f -regex ".*/target/surefire-reports/junitreports/.*xml" -exec cp {} ~/test_results/ \;
      - store_test_results:
          path: ~/test_results
      - store_artifacts:
          path: ~/test_results
      - run: bash <(curl -s https://codecov.io/bash) -t ${CODECOV_TOKEN}
      # collect docs
      - run: mkdir -p ~/docs
      - run: find . -type d -name 'dokka' -exec cp -r {} ~/docs/ \;
      - store_artifacts:
          path: ~/docs
      # collect built packages and save to workspace for deploy
      - run: mkdir -p ~/jars
      - run: find . -type f -regex ".*/target/.*jar" -exec cp {} ~/jars/ \;
      - run: find . -type f -regex ".*/target/.*zip" -exec cp {} ~/jars/ \;
      - store_artifacts:
          path: ~/jars
      - persist_to_workspace:
          root: ~/jars
          paths:
            - .

  deploy:
    docker:
      - image: circleci/python:3.6 # more likely to already be on the new host than the java image
    steps:
      - attach_workspace:
          at: ~/jars
      - run: sudo apt install awscli
      - run:
          name: Deploy to elasticbeanstalk
          command: |
            aws s3 cp `ls ~/jars/server-*-elasticbeanstalk.zip` s3://elasticbeanstalk-${AWS_DEFAULT_REGION}-${AWS_ACCOUNT_ID}/${CIRCLE_PROJECT_REPONAME}-${CIRCLE_BUILD_NUM}.zip
            aws elasticbeanstalk create-application-version --application-name ${CIRCLE_PROJECT_REPONAME} --version-label ${CIRCLE_BUILD_NUM}  --source-bundle S3Bucket=elasticbeanstalk-${AWS_DEFAULT_REGION}-${AWS_ACCOUNT_ID},S3Key=${CIRCLE_PROJECT_REPONAME}-${CIRCLE_BUILD_NUM}.zip
            aws elasticbeanstalk update-environment --application-name ${CIRCLE_PROJECT_REPONAME} --environment-name "${CIRCLE_PROJECT_REPONAME}-prod" --version-label ${CIRCLE_BUILD_NUM}
workflows:
  version: 2
  build_pipeline:
    jobs:
      - build
      - hold:
          type: approval
          requires:
            - build
          filters:
            branches:
              only:
                - master
      - deploy:
          requires:
            - hold
          filters:
            branches:
              only:
                - master
